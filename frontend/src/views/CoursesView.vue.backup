<template>
  <div class="min-h-screen bg-white py-8">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <!-- Header -->
      <div class="mb-8">
        <h1 class="text-3xl font-bold text-gray-900">Všetky kurzy</h1>
        <p class="mt-2 text-gray-600">Objavte kurzy na rast vašeho YouTube kanála</p>
      </div>

      <!-- Filters -->
      <div class="mb-8 flex flex-wrap gap-4">
        <select v-model="sortBy" class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent">
          <option value="created_at">Najnovšie</option>
          <option value="price">Cena: Od najnižšej</option>
          <option value="-price">Cena: Od najvyššej</option>
          <option value="title">Názov: A-Z</option>
        </select>
      </div>

      <!-- Debug info -->
      <div class="mb-4 p-4 bg-gray-100 rounded">
        <p>Loading: {{ courseStore.loading }}</p>
        <p>Courses count: {{ courses.length }}</p>
        <p>Filtered courses count: {{ filteredCourses.length }}</p>
      </div>

      <!-- Loading -->
      <div v-if="courseStore.loading" class="flex justify-center py-12">
        <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600"></div>
      </div>

      <!-- Courses Grid -->
      <div v-else-if="filteredCourses.length > 0" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        <CourseCard
          v-for="course in filteredCourses"
          :key="course.id"
          :course="course"
        />
      </div>

      <!-- No courses found -->
      <div v-else class="text-center py-12">
        <div class="text-gray-400 text-lg">Žiadne kurzy sa nenašli</div>
        <p class="text-gray-500 mt-2">Skúste upraviť filtre alebo sa neskôr vráťte pre nové kurzy.</p>
      </div>
    </div>
  </div>
</template>

<script>
import { ref, computed, onMounted } from 'vue'
import { useCourseStore } from '@/stores/course'
import CourseCard from '@/components/courses/CourseCard.vue'

export default {
  name: 'CoursesView',
  components: {
    CourseCard
  },
  setup() {
    const courseStore = useCourseStore()
    const sortBy = ref('created_at')

    const courses = computed(() => courseStore.courses)

    const filteredCourses = computed(() => {
      // Ensure we have a valid array
      if (!courses.value || !Array.isArray(courses.value)) {
        console.log('No courses or not an array:', courses.value)
        return []
      }
      
      console.log('Processing courses:', courses.value.length, 'items')
      
      // Create copy and sort
      const copy = courses.value.slice()
      return copy.sort((a, b) => {
        if (!a || !b) return 0
        
        switch (sortBy.value) {
          case 'price':
            return parseFloat(a.price || 0) - parseFloat(b.price || 0)
          case '-price':
            return parseFloat(b.price || 0) - parseFloat(a.price || 0)
          case 'title':
            return (a.title || '').localeCompare(b.title || '')
          case 'created_at':
          default:
            const dateA = new Date(a.created_at || 0)
            const dateB = new Date(b.created_at || 0)
            return dateB - dateA
        }
      })
    })

    const loadData = async () => {
      try {
        await courseStore.fetchCourses()
      } catch (error) {
        console.error('Error loading courses:', error)
      }
    }

    onMounted(() => {
      loadData()
    })

    return {
      sortBy,
      filteredCourses,
      courseStore
    }
  }
}
</script>
